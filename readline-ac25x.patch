--- readline-5.2/aclocal.m4.orig	2006-09-12 23:18:07.000000000 +0200
+++ readline-5.2/aclocal.m4	2006-10-29 00:23:32.497147500 +0200
@@ -4,7 +4,7 @@
 dnl Some derived from PDKSH 5.1.3 autoconf tests
 dnl
 
-AC_DEFUN(BASH_C_LONG_LONG,
+AC_DEFUN([BASH_C_LONG_LONG],
 [AC_CACHE_CHECK(for long long, ac_cv_c_long_long,
 [if test "$GCC" = yes; then
   ac_cv_c_long_long=yes
@@ -27,7 +27,7 @@
 dnl This is very similar to AC_C_LONG_DOUBLE, with the fix for IRIX
 dnl (< changed to <=) added.
 dnl
-AC_DEFUN(BASH_C_LONG_DOUBLE,
+AC_DEFUN([BASH_C_LONG_DOUBLE],
 [AC_CACHE_CHECK(for long double, ac_cv_c_long_double,
 [if test "$GCC" = yes; then
   ac_cv_c_long_double=yes
@@ -56,7 +56,7 @@
 dnl AC_REQUIREd.
 dnl
 dnl BASH_HEADER_INTTYPES
-AC_DEFUN(BASH_HEADER_INTTYPES,
+AC_DEFUN([BASH_HEADER_INTTYPES],
 [
  AC_CHECK_HEADERS(inttypes.h)
 ])
@@ -66,7 +66,7 @@
 dnl specify the include files to be checked in addition to the default
 dnl 
 dnl BASH_CHECK_TYPE(TYPE, HEADERS, DEFAULT[, VALUE-IF-FOUND])
-AC_DEFUN(BASH_CHECK_TYPE,
+AC_DEFUN([BASH_CHECK_TYPE],
 [
 AC_REQUIRE([AC_HEADER_STDC])dnl
 AC_REQUIRE([BASH_HEADER_INTTYPES])
@@ -97,7 +97,7 @@
 dnl Check for a declaration of FUNC in stdlib.h and inttypes.h like
 dnl AC_CHECK_DECL
 dnl
-AC_DEFUN(BASH_CHECK_DECL,
+AC_DEFUN([BASH_CHECK_DECL],
 [
 AC_REQUIRE([AC_HEADER_STDC])
 AC_REQUIRE([BASH_HEADER_INTTYPES])
@@ -121,7 +121,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_DECL_PRINTF,
+AC_DEFUN([BASH_DECL_PRINTF],
 [AC_MSG_CHECKING(for declaration of printf in <stdio.h>)
 AC_CACHE_VAL(bash_cv_printf_declared,
 [AC_TRY_RUN([
@@ -147,7 +147,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_DECL_SBRK,
+AC_DEFUN([BASH_DECL_SBRK],
 [AC_MSG_CHECKING(for declaration of sbrk in <unistd.h>)
 AC_CACHE_VAL(bash_cv_sbrk_declared,
 [AC_EGREP_HEADER(sbrk, unistd.h,
@@ -161,7 +161,7 @@
 dnl
 dnl Check for sys_siglist[] or _sys_siglist[]
 dnl
-AC_DEFUN(BASH_DECL_UNDER_SYS_SIGLIST,
+AC_DEFUN([BASH_DECL_UNDER_SYS_SIGLIST],
 [AC_MSG_CHECKING([for _sys_siglist in signal.h or unistd.h])
 AC_CACHE_VAL(bash_cv_decl_under_sys_siglist,
 [AC_TRY_COMPILE([
@@ -178,7 +178,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_UNDER_SYS_SIGLIST,
+AC_DEFUN([BASH_UNDER_SYS_SIGLIST],
 [AC_REQUIRE([BASH_DECL_UNDER_SYS_SIGLIST])
 AC_MSG_CHECKING([for _sys_siglist in system C library])
 AC_CACHE_VAL(bash_cv_under_sys_siglist,
@@ -205,7 +205,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_SYS_SIGLIST,
+AC_DEFUN([BASH_SYS_SIGLIST],
 [AC_REQUIRE([AC_DECL_SYS_SIGLIST])
 AC_MSG_CHECKING([for sys_siglist in system C library])
 AC_CACHE_VAL(bash_cv_sys_siglist,
@@ -234,7 +234,7 @@
 
 dnl Check for the various permutations of sys_siglist and make sure we
 dnl compile in siglist.o if they're not defined
-AC_DEFUN(BASH_CHECK_SYS_SIGLIST, [
+AC_DEFUN([BASH_CHECK_SYS_SIGLIST], [
 AC_REQUIRE([BASH_SYS_SIGLIST])
 AC_REQUIRE([BASH_DECL_UNDER_SYS_SIGLIST])
 AC_REQUIRE([BASH_FUNC_STRSIGNAL])
@@ -247,7 +247,7 @@
 ])
 
 dnl Check for sys_errlist[] and sys_nerr, check for declaration
-AC_DEFUN(BASH_SYS_ERRLIST,
+AC_DEFUN([BASH_SYS_ERRLIST],
 [AC_MSG_CHECKING([for sys_errlist and sys_nerr])
 AC_CACHE_VAL(bash_cv_sys_errlist,
 [AC_TRY_LINK([#include <errno.h>],
@@ -264,7 +264,7 @@
 dnl
 dnl Check if dup2() does not clear the close on exec flag
 dnl
-AC_DEFUN(BASH_FUNC_DUP2_CLOEXEC_CHECK,
+AC_DEFUN([BASH_FUNC_DUP2_CLOEXEC_CHECK],
 [AC_MSG_CHECKING(if dup2 fails to clear the close-on-exec flag)
 AC_CACHE_VAL(bash_cv_dup2_broken,
 [AC_TRY_RUN([
@@ -293,7 +293,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_FUNC_STRSIGNAL,
+AC_DEFUN([BASH_FUNC_STRSIGNAL],
 [AC_MSG_CHECKING([for the existence of strsignal])
 AC_CACHE_VAL(bash_cv_have_strsignal,
 [AC_TRY_LINK([#include <sys/types.h>
@@ -307,7 +307,7 @@
 ])
 
 dnl Check to see if opendir will open non-directories (not a nice thing)
-AC_DEFUN(BASH_FUNC_OPENDIR_CHECK,
+AC_DEFUN([BASH_FUNC_OPENDIR_CHECK],
 [AC_REQUIRE([AC_HEADER_DIRENT])dnl
 AC_MSG_CHECKING(if opendir() opens non-directories)
 AC_CACHE_VAL(bash_cv_opendir_not_robust,
@@ -360,7 +360,7 @@
 ])
 
 dnl
-AC_DEFUN(BASH_TYPE_SIGHANDLER,
+AC_DEFUN([BASH_TYPE_SIGHANDLER],
 [AC_MSG_CHECKING([whether signal handlers are of type void])
 AC_CACHE_VAL(bash_cv_void_sighandler,
 [AC_TRY_COMPILE([#include <sys/types.h>
@@ -382,7 +382,7 @@
 dnl
 dnl A signed 16-bit integer quantity
 dnl
-AC_DEFUN(BASH_TYPE_BITS16_T,
+AC_DEFUN([BASH_TYPE_BITS16_T],
 [
 if test "$ac_cv_sizeof_short" = 2; then
   AC_CHECK_TYPE(bits16_t, short)
@@ -396,7 +396,7 @@
 dnl
 dnl An unsigned 16-bit integer quantity
 dnl
-AC_DEFUN(BASH_TYPE_U_BITS16_T,
+AC_DEFUN([BASH_TYPE_U_BITS16_T],
 [
 if test "$ac_cv_sizeof_short" = 2; then
   AC_CHECK_TYPE(u_bits16_t, unsigned short)
@@ -410,7 +410,7 @@
 dnl
 dnl A signed 32-bit integer quantity
 dnl
-AC_DEFUN(BASH_TYPE_BITS32_T,
+AC_DEFUN([BASH_TYPE_BITS32_T],
 [
 if test "$ac_cv_sizeof_int" = 4; then
   AC_CHECK_TYPE(bits32_t, int)
@@ -424,7 +424,7 @@
 dnl
 dnl An unsigned 32-bit integer quantity
 dnl
-AC_DEFUN(BASH_TYPE_U_BITS32_T,
+AC_DEFUN([BASH_TYPE_U_BITS32_T],
 [
 if test "$ac_cv_sizeof_int" = 4; then
   AC_CHECK_TYPE(u_bits32_t, unsigned int)
@@ -435,7 +435,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_TYPE_PTRDIFF_T,
+AC_DEFUN([BASH_TYPE_PTRDIFF_T],
 [
 if test "$ac_cv_sizeof_int" = "$ac_cv_sizeof_char_p"; then
   AC_CHECK_TYPE(ptrdiff_t, int)
@@ -451,7 +451,7 @@
 dnl
 dnl A signed 64-bit quantity
 dnl
-AC_DEFUN(BASH_TYPE_BITS64_T,
+AC_DEFUN([BASH_TYPE_BITS64_T],
 [
 if test "$ac_cv_sizeof_char_p" = 8; then
   AC_CHECK_TYPE(bits64_t, char *)
@@ -466,7 +466,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_TYPE_LONG_LONG,
+AC_DEFUN([BASH_TYPE_LONG_LONG],
 [
 AC_CACHE_CHECK([for long long], bash_cv_type_long_long,
 [AC_TRY_LINK([
@@ -480,7 +480,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_TYPE_UNSIGNED_LONG_LONG,
+AC_DEFUN([BASH_TYPE_UNSIGNED_LONG_LONG],
 [
 AC_CACHE_CHECK([for unsigned long long], bash_cv_type_unsigned_long_long,
 [AC_TRY_LINK([
@@ -501,7 +501,7 @@
 dnl long and still others use int (HP-UX 9.01, SunOS 4.1.3).  To simplify
 dnl matters, this just checks for rlim_t, quad_t, or long.
 dnl
-AC_DEFUN(BASH_TYPE_RLIMIT,
+AC_DEFUN([BASH_TYPE_RLIMIT],
 [AC_MSG_CHECKING(for size and type of struct rlimit fields)
 AC_CACHE_VAL(bash_cv_type_rlimit,
 [AC_TRY_COMPILE([#include <sys/types.h>
@@ -531,7 +531,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_FUNC_LSTAT,
+AC_DEFUN([BASH_FUNC_LSTAT],
 [dnl Cannot use AC_CHECK_FUNCS(lstat) because Linux defines lstat() as an
 dnl inline function in <sys/stat.h>.
 AC_CACHE_CHECK([for lstat], bash_cv_func_lstat,
@@ -545,7 +545,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_FUNC_INET_ATON,
+AC_DEFUN([BASH_FUNC_INET_ATON],
 [
 AC_CACHE_CHECK([for inet_aton], bash_cv_func_inet_aton,
 [AC_TRY_LINK([
@@ -561,7 +561,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_FUNC_GETENV,
+AC_DEFUN([BASH_FUNC_GETENV],
 [AC_MSG_CHECKING(to see if getenv can be redefined)
 AC_CACHE_VAL(bash_cv_getenv_redef,
 [AC_TRY_RUN([
@@ -606,7 +606,7 @@
 ])
 
 # We should check for putenv before calling this
-AC_DEFUN(BASH_FUNC_STD_PUTENV,
+AC_DEFUN([BASH_FUNC_STD_PUTENV],
 [
 AC_REQUIRE([AC_HEADER_STDC])
 AC_REQUIRE([AC_C_PROTOTYPES])
@@ -636,7 +636,7 @@
 ])
 
 # We should check for unsetenv before calling this
-AC_DEFUN(BASH_FUNC_STD_UNSETENV,
+AC_DEFUN([BASH_FUNC_STD_UNSETENV],
 [
 AC_REQUIRE([AC_HEADER_STDC])
 AC_REQUIRE([AC_C_PROTOTYPES])
@@ -665,7 +665,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_FUNC_ULIMIT_MAXFDS,
+AC_DEFUN([BASH_FUNC_ULIMIT_MAXFDS],
 [AC_MSG_CHECKING(whether ulimit can substitute for getdtablesize)
 AC_CACHE_VAL(bash_cv_ulimit_maxfds,
 [AC_TRY_RUN([
@@ -684,7 +684,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_FUNC_GETCWD,
+AC_DEFUN([BASH_FUNC_GETCWD],
 [AC_MSG_CHECKING([if getcwd() will dynamically allocate memory])
 AC_CACHE_VAL(bash_cv_getcwd_malloc,
 [AC_TRY_RUN([
@@ -714,7 +714,7 @@
 dnl This needs BASH_CHECK_SOCKLIB, but since that's not called on every
 dnl system, we can't use AC_PREREQ
 dnl
-AC_DEFUN(BASH_FUNC_GETHOSTBYNAME,
+AC_DEFUN([BASH_FUNC_GETHOSTBYNAME],
 [if test "X$bash_cv_have_gethostbyname" = "X"; then
 _bash_needmsg=yes
 else
@@ -736,7 +736,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_FUNC_FNMATCH_EXTMATCH,
+AC_DEFUN([BASH_FUNC_FNMATCH_EXTMATCH],
 [AC_MSG_CHECKING(if fnmatch does extended pattern matching with FNM_EXTMATCH)
 AC_CACHE_VAL(bash_cv_fnm_extmatch,
 [AC_TRY_RUN([
@@ -760,7 +760,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_FUNC_POSIX_SETJMP,
+AC_DEFUN([BASH_FUNC_POSIX_SETJMP],
 [AC_REQUIRE([BASH_SYS_SIGNAL_VINTAGE])
 AC_MSG_CHECKING(for presence of POSIX-style sigsetjmp/siglongjmp)
 AC_CACHE_VAL(bash_cv_func_sigsetjmp,
@@ -811,7 +811,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_FUNC_STRCOLL,
+AC_DEFUN([BASH_FUNC_STRCOLL],
 [
 AC_MSG_CHECKING(whether or not strcoll and strcmp differ)
 AC_CACHE_VAL(bash_cv_func_strcoll_broken,
@@ -860,7 +860,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_FUNC_PRINTF_A_FORMAT,
+AC_DEFUN([BASH_FUNC_PRINTF_A_FORMAT],
 [AC_MSG_CHECKING([for printf floating point output in hex notation])
 AC_CACHE_VAL(bash_cv_printf_a_format,
 [AC_TRY_RUN([
@@ -886,7 +886,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_STRUCT_TERMIOS_LDISC,
+AC_DEFUN([BASH_STRUCT_TERMIOS_LDISC],
 [
 AC_CHECK_MEMBER(struct termios.c_line, AC_DEFINE(TERMIOS_LDISC), ,[
 #include <sys/types.h>
@@ -894,7 +894,7 @@
 ])
 ])
 
-AC_DEFUN(BASH_STRUCT_TERMIO_LDISC,
+AC_DEFUN([BASH_STRUCT_TERMIO_LDISC],
 [
 AC_CHECK_MEMBER(struct termio.c_line, AC_DEFINE(TERMIO_LDISC), ,[
 #include <sys/types.h>
@@ -909,7 +909,7 @@
 dnl
 dnl unused for now; we'll see how AC_CHECK_MEMBERS works
 dnl
-AC_DEFUN(BASH_STRUCT_ST_BLOCKS,
+AC_DEFUN([BASH_STRUCT_ST_BLOCKS],
 [
 AC_MSG_CHECKING([for struct stat.st_blocks])
 AC_CACHE_VAL(bash_cv_struct_stat_st_blocks,
@@ -984,7 +984,7 @@
 dnl NOTE: IF WE FIND GETPEERNAME, WE ASSUME THAT WE HAVE BIND/CONNECT
 dnl	  AS WELL
 dnl
-AC_DEFUN(BASH_CHECK_LIB_SOCKET,
+AC_DEFUN([BASH_CHECK_LIB_SOCKET],
 [
 if test "X$bash_cv_have_socklib" = "X"; then
 _bash_needmsg=
@@ -1024,7 +1024,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_STRUCT_DIRENT_D_INO,
+AC_DEFUN([BASH_STRUCT_DIRENT_D_INO],
 [AC_REQUIRE([AC_HEADER_DIRENT])
 AC_MSG_CHECKING(for struct dirent.d_ino)
 AC_CACHE_VAL(bash_cv_dirent_has_dino,
@@ -1057,7 +1057,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_STRUCT_DIRENT_D_FILENO,
+AC_DEFUN([BASH_STRUCT_DIRENT_D_FILENO],
 [AC_REQUIRE([AC_HEADER_DIRENT])
 AC_MSG_CHECKING(for struct dirent.d_fileno)
 AC_CACHE_VAL(bash_cv_dirent_has_d_fileno,
@@ -1090,7 +1090,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_STRUCT_DIRENT_D_NAMLEN,
+AC_DEFUN([BASH_STRUCT_DIRENT_D_NAMLEN],
 [AC_REQUIRE([AC_HEADER_DIRENT])
 AC_MSG_CHECKING(for struct dirent.d_namlen)
 AC_CACHE_VAL(bash_cv_dirent_has_d_namlen,
@@ -1123,7 +1123,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_STRUCT_TIMEVAL,
+AC_DEFUN([BASH_STRUCT_TIMEVAL],
 [AC_MSG_CHECKING(for struct timeval in sys/time.h and time.h)
 AC_CACHE_VAL(bash_cv_struct_timeval,
 [
@@ -1139,7 +1139,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_STRUCT_TIMEZONE,
+AC_DEFUN([BASH_STRUCT_TIMEZONE],
 [AC_MSG_CHECKING(for struct timezone in sys/time.h and time.h)
 AC_CACHE_VAL(bash_cv_struct_timezone,
 [
@@ -1155,7 +1155,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_STRUCT_WINSIZE,
+AC_DEFUN([BASH_STRUCT_WINSIZE],
 [AC_MSG_CHECKING(for struct winsize in sys/ioctl.h and termios.h)
 AC_CACHE_VAL(bash_cv_struct_winsize_header,
 [AC_TRY_COMPILE([#include <sys/types.h>
@@ -1177,7 +1177,7 @@
 ])
 
 dnl Check type of signal routines (posix, 4.2bsd, 4.1bsd or v7)
-AC_DEFUN(BASH_SYS_SIGNAL_VINTAGE,
+AC_DEFUN([BASH_SYS_SIGNAL_VINTAGE],
 [AC_REQUIRE([AC_TYPE_SIGNAL])
 AC_MSG_CHECKING(for type of signal functions)
 AC_CACHE_VAL(bash_cv_signal_vintage,
@@ -1217,7 +1217,7 @@
 ])
 
 dnl Check if the pgrp of setpgrp() can't be the pid of a zombie process.
-AC_DEFUN(BASH_SYS_PGRP_SYNC,
+AC_DEFUN([BASH_SYS_PGRP_SYNC],
 [AC_REQUIRE([AC_FUNC_GETPGRP])
 AC_MSG_CHECKING(whether pgrps need synchronization)
 AC_CACHE_VAL(bash_cv_pgrp_pipe,
@@ -1279,7 +1279,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_SYS_REINSTALL_SIGHANDLERS,
+AC_DEFUN([BASH_SYS_REINSTALL_SIGHANDLERS],
 [AC_REQUIRE([AC_TYPE_SIGNAL])
 AC_REQUIRE([BASH_SYS_SIGNAL_VINTAGE])
 AC_MSG_CHECKING([if signal handlers must be reinstalled when invoked])
@@ -1338,7 +1338,7 @@
 ])
 
 dnl check that some necessary job control definitions are present
-AC_DEFUN(BASH_SYS_JOB_CONTROL_MISSING,
+AC_DEFUN([BASH_SYS_JOB_CONTROL_MISSING],
 [AC_REQUIRE([BASH_SYS_SIGNAL_VINTAGE])
 AC_MSG_CHECKING(for presence of necessary job control definitions)
 AC_CACHE_VAL(bash_cv_job_control_missing,
@@ -1397,7 +1397,7 @@
 
 dnl check whether named pipes are present
 dnl this requires a previous check for mkfifo, but that is awkward to specify
-AC_DEFUN(BASH_SYS_NAMED_PIPES,
+AC_DEFUN([BASH_SYS_NAMED_PIPES],
 [AC_MSG_CHECKING(for presence of named pipes)
 AC_CACHE_VAL(bash_cv_sys_named_pipes,
 [AC_TRY_RUN([
@@ -1447,7 +1447,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_SYS_DEFAULT_MAIL_DIR,
+AC_DEFUN([BASH_SYS_DEFAULT_MAIL_DIR],
 [AC_MSG_CHECKING(for default mail directory)
 AC_CACHE_VAL(bash_cv_mail_dir,
 [if test -d /var/mail; then
@@ -1466,7 +1466,7 @@
 AC_DEFINE_UNQUOTED(DEFAULT_MAIL_DIRECTORY, "$bash_cv_mail_dir")
 ])
 
-AC_DEFUN(BASH_HAVE_TIOCGWINSZ,
+AC_DEFUN([BASH_HAVE_TIOCGWINSZ],
 [AC_MSG_CHECKING(for TIOCGWINSZ in sys/ioctl.h)
 AC_CACHE_VAL(bash_cv_tiocgwinsz_in_ioctl,
 [AC_TRY_COMPILE([#include <sys/types.h>
@@ -1478,7 +1478,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_HAVE_TIOCSTAT,
+AC_DEFUN([BASH_HAVE_TIOCSTAT],
 [AC_MSG_CHECKING(for TIOCSTAT in sys/ioctl.h)
 AC_CACHE_VAL(bash_cv_tiocstat_in_ioctl,
 [AC_TRY_COMPILE([#include <sys/types.h>
@@ -1490,7 +1490,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_HAVE_FIONREAD,
+AC_DEFUN([BASH_HAVE_FIONREAD],
 [AC_MSG_CHECKING(for FIONREAD in sys/ioctl.h)
 AC_CACHE_VAL(bash_cv_fionread_in_ioctl,
 [AC_TRY_COMPILE([#include <sys/types.h>
@@ -1508,7 +1508,7 @@
 dnl but you can only get speed_t if you include <termios.h> (on some
 dnl versions) or <sys/types.h> (on others).
 dnl
-AC_DEFUN(BASH_CHECK_SPEED_T,
+AC_DEFUN([BASH_CHECK_SPEED_T],
 [AC_MSG_CHECKING(for speed_t in sys/types.h)
 AC_CACHE_VAL(bash_cv_speed_t_in_sys_types,
 [AC_TRY_COMPILE([#include <sys/types.h>], [speed_t x;],
@@ -1519,7 +1519,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_CHECK_GETPW_FUNCS,
+AC_DEFUN([BASH_CHECK_GETPW_FUNCS],
 [AC_MSG_CHECKING(whether getpw functions are declared in pwd.h)
 AC_CACHE_VAL(bash_cv_getpw_declared,
 [AC_EGREP_CPP(getpwuid,
@@ -1537,7 +1537,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_CHECK_DEV_FD,
+AC_DEFUN([BASH_CHECK_DEV_FD],
 [AC_MSG_CHECKING(whether /dev/fd is available)
 AC_CACHE_VAL(bash_cv_dev_fd,
 [bash_cv_dev_fd=""
@@ -1569,7 +1569,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_CHECK_DEV_STDIN,
+AC_DEFUN([BASH_CHECK_DEV_STDIN],
 [AC_MSG_CHECKING(whether /dev/stdin stdout stderr are available)
 AC_CACHE_VAL(bash_cv_dev_stdin,
 [if test -d /dev/fd && test -r /dev/stdin < /dev/null; then
@@ -1589,7 +1589,7 @@
 dnl
 dnl Check if HPUX needs _KERNEL defined for RLIMIT_* definitions
 dnl
-AC_DEFUN(BASH_CHECK_KERNEL_RLIMIT,
+AC_DEFUN([BASH_CHECK_KERNEL_RLIMIT],
 [AC_MSG_CHECKING([whether $host_os needs _KERNEL for RLIMIT defines])
 AC_CACHE_VAL(bash_cv_kernel_rlimit,
 [AC_TRY_COMPILE([
@@ -1623,7 +1623,7 @@
 dnl C does not allow duplicate case labels, so the compile will fail if
 dnl sizeof(off_t) is > 4.
 dnl
-AC_DEFUN(BASH_CHECK_OFF_T_64,
+AC_DEFUN([BASH_CHECK_OFF_T_64],
 [AC_CACHE_CHECK(for 64-bit off_t, bash_cv_off_t_64,
 AC_TRY_COMPILE([
 #ifdef HAVE_UNISTD_H
@@ -1637,7 +1637,7 @@
         AC_DEFINE(HAVE_OFF_T_64)
 fi])
 
-AC_DEFUN(BASH_CHECK_RTSIGS,
+AC_DEFUN([BASH_CHECK_RTSIGS],
 [AC_MSG_CHECKING(for unusable real-time signals due to large values)
 AC_CACHE_VAL(bash_cv_unusable_rtsigs,
 [AC_TRY_RUN([
@@ -1673,7 +1673,7 @@
 dnl
 dnl geez, I wish I didn't have to check for all of this stuff separately
 dnl
-AC_DEFUN(BASH_CHECK_MULTIBYTE,
+AC_DEFUN([BASH_CHECK_MULTIBYTE],
 [
 AC_CHECK_HEADERS(wctype.h)
 AC_CHECK_HEADERS(wchar.h)
@@ -1863,7 +1863,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_FUNC_CTYPE_NONASCII,
+AC_DEFUN([BASH_FUNC_CTYPE_NONASCII],
 [
 AC_MSG_CHECKING(whether the ctype macros accept non-ascii characters)
 AC_CACHE_VAL(bash_cv_func_ctype_nonascii,
@@ -1907,7 +1907,7 @@
 fi
 ])
 
-AC_DEFUN(BASH_CHECK_WCONTINUED,
+AC_DEFUN([BASH_CHECK_WCONTINUED],
 [
 AC_MSG_CHECKING(whether WCONTINUED flag to waitpid is unavailable or available but broken)
 AC_CACHE_VAL(bash_cv_wcontinued_broken,
